{"version":3,"sources":["logo.svg","Location.js","CustomMaps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","lastUpdateTime","CustomMaps","withScriptjs","withGoogleMap","lat","lng","isMarkerShown","center","undefined","defaultZoom","defaultCenter","defaultOptions","mapOptions","position","scrollwheel","zoomControl","styles","App","useState","userLocation","setUserLocation","errorMessage","setErrorMessage","useEffect","window","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","error","0","1","2","3","code","enableHighAccuracy","timeout","maximumAge","currentLocation","Date","watchPosition","now","Math","abs","console","log","watchCurrentLocation","message","NotificationManager","info","className","src","logo","alt","href","target","rel","googleMapURL","loadingElement","style","height","containerElement","mapElement","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ea1a4db4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let lastUpdateTime;\r\n\r\nconst currentLocation = (setUserLocation, setErrorMessage) => {\r\n    if (window.navigator.geolocation !== undefined) {\r\n\r\n        const success = (position) => {\r\n            const location = {\r\n                lat: position.coords.latitude ? position.coords.latitude : undefined,\r\n                lng: position.coords.longitude ? position.coords.longitude : undefined,\r\n            }\r\n\r\n            setUserLocation(location);\r\n        }\r\n\r\n        const error = (error) => {\r\n\r\n            const errorTypes = {\r\n                0: \"不明原因錯誤\",\r\n                1: \"使用者拒絕提供位置資訊\",\r\n                2: \"無法取得位置資訊\",\r\n                3: \"位置查詢逾時\"\r\n            };\r\n\r\n            setErrorMessage(errorTypes[error.code])\r\n        }\r\n\r\n        const optoptions = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n\r\n        window.navigator.geolocation.getCurrentPosition(success, error, optoptions);\r\n    }\r\n}\r\n\r\nconst watchCurrentLocation = (setUserLocation, setErrorMessage) => {\r\n    const success = (position) => {\r\n        const location = {\r\n            lat: position.coords.latitude ? position.coords.latitude : undefined,\r\n            lng: position.coords.longitude ? position.coords.longitude : undefined,\r\n        }\r\n\r\n        const now = new Date();\r\n        var duration = Math.abs(now - lastUpdateTime) / 1000;\r\n        const durationSeconds = duration % 60;\r\n        const updateSecondLimitation = 60;\r\n\r\n        let allowUpdate = durationSeconds > updateSecondLimitation ? true : false;\r\n\r\n        if (allowUpdate) {\r\n            setUserLocation(location);\r\n            lastUpdateTime = new Date();\r\n        }\r\n\r\n        console.log(location);\r\n    }\r\n\r\n    const error = (error) => {\r\n\r\n        const errorTypes = {\r\n            0: \"不明原因錯誤\",\r\n            1: \"使用者拒絕提供位置資訊\",\r\n            2: \"無法取得位置資訊\",\r\n            3: \"位置查詢逾時\"\r\n        };\r\n\r\n        setErrorMessage(errorTypes[error.code])\r\n    }\r\n\r\n    const options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0\r\n    };\r\n\r\n    lastUpdateTime = lastUpdateTime ? lastUpdateTime : new Date();\r\n\r\n    navigator.geolocation.watchPosition(success, error, options);\r\n}\r\n\r\nexport { currentLocation, watchCurrentLocation, lastUpdateTime };","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\"\r\n\r\nconst CustomMaps = withScriptjs(withGoogleMap(({ lat, lng, isMarkerShown }) => {\r\n\r\n    const center = lat ? { lat, lng } : undefined\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultZoom={15}\r\n            defaultCenter={{ lat: 25.0339808, lng: 121.5623502 }}\r\n            defaultOptions={mapOptions}\r\n            center={center ? center : undefined}\r\n        >\r\n            {isMarkerShown && <Marker position={{ lat: lat, lng: lng }} />}\r\n        </GoogleMap>\r\n    )\r\n}))\r\n\r\n\r\nconst mapOptions = {\r\n    scrollwheel: false,\r\n    zoomControl: false,\r\n    styles: [\r\n        {\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#212121\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.icon\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#757575\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.text.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#212121\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#757575\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative.country\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#9e9e9e\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative.land_parcel\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative.locality\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#bdbdbd\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#757575\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi.park\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#181818\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi.park\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#616161\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi.park\",\r\n            \"elementType\": \"labels.text.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#1b1b1b\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#2c2c2c\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#8a8a8a\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.arterial\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#373737\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.highway\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#3c3c3c\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.highway.controlled_access\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#4e4e4e\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.local\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#616161\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"transit\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#757575\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#000000\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#3d3d3d\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default CustomMaps;","import React, { useState, useEffect, Fragment } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport CustomMaps from './CustomMaps';\nimport { currentLocation, watchCurrentLocation } from './Location';\n\nconst App = () => {\n  const [userLocation, setUserLocation] = useState(undefined);\n  const [errorMessage, setErrorMessage] = useState(undefined);\n\n  useEffect(() => {\n    currentLocation(setUserLocation, setErrorMessage);\n    watchCurrentLocation(setUserLocation, setErrorMessage);\n  }, []);\n\n  useEffect(() => {\n    if (userLocation) {\n      const message = `Latitude:${userLocation.lat} Longitude:${userLocation.lng}`\n      NotificationManager.info(message, \"Location\", 2000);\n    }\n  }, [userLocation]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      NotificationManager.error(errorMessage, \"Location\", 2000);\n    }\n  }, [errorMessage]);\n\n\n\n  return (\n    <Fragment>\n      <NotificationContainer />\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n        </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n        </a>\n        </header>\n        <CustomMaps\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAm96fO64nsRObE_bPsdv5ND9w2fgbtGEs\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `600px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n          lat={userLocation && userLocation.lat ? userLocation.lat : 25.0339808}\n          lng={userLocation && userLocation.lng ? userLocation.lng : 121.5623502}\n          isMarkerShown={userLocation ? true : false}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}